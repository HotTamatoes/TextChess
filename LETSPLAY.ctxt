#BlueJ class context
comment0.params=
comment0.target=LETSPLAY()
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment10.params=side\ hashtable\ board
comment10.target=int\ getSpot(java.lang.String,\ java.util.Dictionary,\ Board)
comment11.params=side\ spot\ move\ board
comment11.target=boolean\ isValidMove(java.lang.String,\ int,\ int,\ Board)
comment12.params=side\ spot\ move\ board
comment12.target=boolean\ isValidMoveNoKing(java.lang.String,\ int,\ int,\ Board)
comment13.params=array\ rowNum
comment13.target=int[]\ addAll(int[],\ int)
comment14.params=side\ row\ spot\ move\ board
comment14.target=boolean\ knightPossibleMoves(java.lang.String,\ int[],\ int,\ int,\ Board)
comment15.params=side\ row\ spot\ move\ board
comment15.target=boolean\ rookPossibleMoves(java.lang.String,\ int[],\ int,\ int,\ Board)
comment16.params=side\ row\ spot\ move\ board
comment16.target=boolean\ bishopPossibleMoves(java.lang.String,\ int[],\ int,\ int,\ Board)
comment17.params=aRow\ spot\ move\ board
comment17.target=boolean\ whitePawnPossibleMoves(int,\ int,\ int,\ Board)
comment18.params=aRow\ spot\ move\ board
comment18.target=boolean\ blackPawnPossibleMoves(int,\ int,\ int,\ Board)
comment19.params=aRow\ spot\ move\ board
comment19.target=boolean\ enPassantWhite(int,\ int,\ int,\ Board)
comment2.params=
comment2.target=void\ actuallyPlay()
comment20.params=aRow\ spot\ move\ board
comment20.target=boolean\ enPassantBlack(int,\ int,\ int,\ Board)
comment21.params=side\ row\ spot\ move\ board
comment21.target=boolean\ kingPossibleMoves(java.lang.String,\ int[],\ int,\ int,\ Board)
comment22.params=side\ spot\ move\ board
comment22.target=boolean\ castle(java.lang.String,\ int,\ int,\ Board)
comment22.text=\r\n\ conditions\:\r\n\ \ \ \ \ \ king\ and\ rook\ must\ be\ on\ native\ spots\r\n\ \ \ \ \ \ cannot\ be\ check\ between\ king\ and\ rook\r\n\ \ \ \ \ \ cannot\ be\ pieces\ between\ king\ and\ rook\r\n
comment23.params=side\ board
comment23.target=boolean\ testKing(java.lang.String,\ Board)
comment23.text=\r\n\ if\ king\ in\ check\:\r\n\ checks\ piece\ by\ piece\ if\ it\ can\ move\ to\ a\r\n\ spot\ on\ the\ board\ to\ put\ the\ king\ not\ in\ check\r\n\ returns\ true\ if\ there\ is\ a\ move\ or\ king\ is\ not\ in\ check\r\n\ returns\ false\ if\ game\ is\ over\ -\ checkmate\r\n
comment24.params=side\ nameOfPiece\ board
comment24.target=boolean\ isKingInCheck(java.lang.String,\ java.lang.String,\ Board)
comment24.text=\r\n\ return\ true\ if\ there\ is\ a\ possible\ move\r\n\ returns\ false\ if\ this\ piece\ cannot\ move\ to\ get\ king\ out\ of\ check\r\n
comment25.params=side\ nameOfPiece\ board
comment25.target=boolean\ isKingInCheckPawn(java.lang.String,\ java.lang.String,\ Board)
comment26.params=side\ spot\ move\ board
comment26.target=boolean\ kingNotInCheck(java.lang.String,\ int,\ int,\ Board)
comment26.text=\r\n\ returns\ true\ if\ the\ king\ is\ NOT\ in\ check\ after\ the\ piece\ has\ moved\ there\r\n\ returns\ false\ if\ the\ king\ is\ in\ check\ or\ move\ is\ illegal\r\n
comment27.params=nameOfKingPiece\ board
comment27.target=int\ findKing(java.lang.String,\ Board)
comment28.params=side\ kingMoveTo\ board
comment28.target=boolean\ notInCheck(java.lang.String,\ int,\ Board)
comment29.params=side\ nameOfPiece\ kingMoveTo\ board
comment29.target=boolean\ canMoveTo(java.lang.String,\ java.lang.String,\ int,\ Board)
comment29.text=\r\n\ returns\ true\ if\ can\ move\ to\ spot\r\n\ returns\ false\ if\ cannot\ move\ to\ spot\r\n
comment3.params=
comment3.target=boolean\ playAgain()
comment30.params=side\ nameOfPiece\ kingMoveTo\ board
comment30.target=boolean\ canMoveToPawn(java.lang.String,\ java.lang.String,\ int,\ Board)
comment4.params=
comment4.target=java.util.Dictionary\ makeHashtable()
comment5.params=board\ hashtable
comment5.target=void\ playSomeChess(Board,\ java.util.Dictionary)
comment6.params=
comment6.target=void\ displayWelcomeMessage()
comment7.params=side\ board\ hashtable
comment7.target=void\ move(java.lang.String,\ Board,\ java.util.Dictionary)
comment8.params=board
comment8.target=void\ moveForCastle(Board)
comment9.params=move\ spot\ board
comment9.target=void\ moveForEnPassant(int,\ int,\ Board)
numComments=31
